generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model allocation {
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  user_id    String    @db.Uuid
  project_id String    @db.Uuid
  start_date DateTime  @default(now()) @db.Timestamp(6)
  end_date   DateTime? @db.Timestamp(6)
  percentage Int       @default(100) @db.SmallInt
  project    project   @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, project_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model permit {
  created_at                    DateTime  @default(now()) @db.Timestamptz(6)
  user_id                       String    @db.Uuid
  duration                      Decimal   @db.Decimal
  id                            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description                   String?
  type                          String    @default("Holiday")
  start_date                    DateTime  @db.Timestamp(6)
  status                        String    @default("Waiting")
  reviewer_id                   String    @db.Uuid
  end_date                      DateTime? @db.Timestamp(6)
  user_permit_reviewer_idTouser user      @relation("permit_reviewer_idTouser", fields: [reviewer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_permit_user_idTouser     user      @relation("permit_user_idTouser", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model project {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at  DateTime     @default(now()) @db.Timestamptz(6)
  name        String       @db.VarChar
  client      String       @db.VarChar
  description String?
  start_date  DateTime     @db.Timestamp(6)
  end_date    DateTime?    @db.Timestamp(6)
  status_id   String       @db.Uuid
  allocation  allocation[]
  status      status       @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  timesheet   timesheet[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model role {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  label      String   @db.VarChar
  user       user[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model status {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  name       String    @db.VarChar
  project    project[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model timesheet {
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  date        DateTime @db.Date
  project_id  String   @db.Uuid
  user_id     String   @db.Uuid
  description String?  @db.VarChar
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  hours       Int      @db.SmallInt
  project     project  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user {
  id                              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                      DateTime     @default(now()) @db.Timestamptz(6)
  email                           String
  name                            String
  avatar_url                      String?
  role_id                         String?      @db.Uuid
  allocation                      allocation[]
  permit_permit_reviewer_idTouser permit[]     @relation("permit_reviewer_idTouser")
  permit_permit_user_idTouser     permit[]     @relation("permit_user_idTouser")
  timesheet                       timesheet[]
  role                            role?        @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
